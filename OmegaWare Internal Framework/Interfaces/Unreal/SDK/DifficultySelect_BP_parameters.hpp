#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySelect_BP

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function DifficultySelect_BP.DifficultySelect_BP_C.ExecuteUbergraph_DifficultySelect_BP
// 0x04F8 (0x04F8 - 0x0000)
struct DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29DC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_15;               // 0x0028(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_14;               // 0x0058(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_13;               // 0x0088(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_12;               // 0x00B8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue;               // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_1;             // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0108(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0130(0x0028)()
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_11;               // 0x0158(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_10;               // 0x0188(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_9;                // 0x01B8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_8;                // 0x01E8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_2;             // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_3;             // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0238(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0260(0x0028)()
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_7;                // 0x0288(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_6;                // 0x02B8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_5;                // 0x02E8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_4;                // 0x0318(0x0030)(ConstParm, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_4;             // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_5;             // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0368(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x0390(0x0028)()
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_3;                // 0x03B8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_2;                // 0x03E8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_1;                // 0x0418(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event;                  // 0x0448(0x0030)(ConstParm, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_6;             // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_7;             // 0x0488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_6;                    // 0x0498(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_7;                    // 0x04C0(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP");
static_assert(sizeof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP) == 0x0004F8, "Wrong size on DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, EntryPoint) == 0x000000, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_15) == 0x000028, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_15' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_14) == 0x000058, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_14' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_13) == 0x000088, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_13' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_12) == 0x0000B8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_12' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue) == 0x0000E8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_1) == 0x0000F8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor) == 0x000108, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_1) == 0x000130, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_11) == 0x000158, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_11' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_10) == 0x000188, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_10' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_9) == 0x0001B8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_9' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_8) == 0x0001E8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_8' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_2) == 0x000218, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_3) == 0x000228, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_2) == 0x000238, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_3) == 0x000260, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_7) == 0x000288, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_7' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_6) == 0x0002B8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_6' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_5) == 0x0002E8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_5' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_4) == 0x000318, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_4' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_4) == 0x000348, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_5) == 0x000358, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_4) == 0x000368, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_5) == 0x000390, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_3) == 0x0003B8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_3' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_2) == 0x0003E8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_2' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event_1) == 0x000418, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event_1' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_ComponentBoundEvent_Event) == 0x000448, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_ComponentBoundEvent_Event' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_6) == 0x000478, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_GetColorByType_ReturnValue_7) == 0x000488, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_GetColorByType_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_6) == 0x000498, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_6' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, K2Node_MakeStruct_SlateColor_7) == 0x0004C0, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::K2Node_MakeStruct_SlateColor_7' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_PlayAnimation_ReturnValue) == 0x0004E8, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP, CallFunc_PlayAnimation_ReturnValue_1) == 0x0004F0, "Member 'DifficultySelect_BP_C_ExecuteUbergraph_DifficultySelect_BP::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_15_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_14_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_13_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__SuperNovaButton_K2Node_ComponentBoundEvent_12_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_11_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_10_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_9_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__HardButton_K2Node_ComponentBoundEvent_8_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_7_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_5_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__NormalButton_K2Node_ComponentBoundEvent_4_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_3_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_2_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_1_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function DifficultySelect_BP.DifficultySelect_BP_C.BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'DifficultySelect_BP_C_BndEvt__EasyButton_K2Node_ComponentBoundEvent_0_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

}

